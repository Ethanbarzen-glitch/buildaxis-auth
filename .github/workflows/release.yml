name: release
on:
  push:
    tags: ['v*.*.*']

permissions:
  contents: write
  packages: write

jobs:
  publish:
    name: publish (${{ matrix.name }}, ${{ matrix.dockerfile }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: api,      context: ./services/api,      dockerfile: ./services/api/Dockerfile,      suffix: -api }
          - { name: projects, context: ./services/projects,  dockerfile: ./services/projects/Dockerfile, suffix: -projects }
          - { name: teams,    context: ./services/teams,     dockerfile: ./services/teams/Dockerfile,    suffix: -teams }

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Lowercase owner
        id: meta
        shell: bash
        run: |
          echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
          echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_OUTPUT"
          echo "repo_name=${GITHUB_REPOSITORY##*/}" >> "$GITHUB_OUTPUT"

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: buildx-${{ github.sha }}
          restore-keys: |
            buildx-

      - name: Build & push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ steps.meta.outputs.repo_name }}${{ matrix.suffix }}:${{ steps.meta.outputs.tag }}
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ steps.meta.outputs.repo_name }}${{ matrix.suffix }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ steps.meta.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to:   type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        if: always()
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Create GitHub Release
        if: ${{ matrix.name == 'api' }} # run once
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name:     ${{ steps.meta.outputs.tag }}
          generate_release_notes: true
