name: release
on:
  push:
    tags: ['v*.*.*']

permissions:
  contents: write
  packages: write

jobs:
  publish:
    name: publish (${{ matrix.name }}, ${{ matrix.dockerfile }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: api,      dockerfile: services/api/Dockerfile,      suffix: -api }
          - { name: projects, dockerfile: services/projects/Dockerfile,  suffix: -projects }
          - { name: teams,    dockerfile: services/teams/Dockerfile,     suffix: -teams }

    env:
      BUILDKIT_PROGRESS: plain   # print full build logs

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Meta
        id: meta
        shell: bash
        run: |
          echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
          echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_OUTPUT"
          echo "repo_name=${GITHUB_REPOSITORY##*/}" >> "$GITHUB_OUTPUT"

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .                                   # <- ROOT CONTEXT (fix)
          file: ${{ matrix.dockerfile }}              # per-service Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ steps.meta.outputs.repo_name }}${{ matrix.suffix }}:${{ steps.meta.outputs.tag }}
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ steps.meta.outputs.repo_name }}${{ matrix.suffix }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: GitHub Release (run once)
        if: ${{ matrix.name == 'api' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name:     ${{ steps.meta.outputs.tag }}
          generate_release_notes: true
