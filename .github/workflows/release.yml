name: release
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: api
            context: .
            dockerfile: Dockerfile
          - name: projects
            context: .
            dockerfile: services/projects/Dockerfile
          - name: teams
            context: .
            dockerfile: services/teams/Dockerfile

    steps:
      - uses: actions/checkout@v4

      - name: Setup QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase owner
        run: echo "OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_ENV"

      - name: Build & push (multi-arch + SBOM + provenance)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/buildaxis-auth-${{ matrix.name }}:${{ github.ref_name }}
            ghcr.io/${{ env.OWNER_LC }}/buildaxis-auth-${{ matrix.name }}:latest
          provenance: mode=max        # in-toto/SLSA attestation
          sbom: true                  # SPDX SBOM as OCI ref
          build-args: |
            PYTHONDONTWRITEBYTECODE=1

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign image digest with cosign (keyless OIDC)
        env:
          COSIGN_EXPERIMENTAL: "1"
          IMAGE: ghcr.io/${{ env.OWNER_LC }}/buildaxis-auth-${{ matrix.name }}@${{ steps.build.outputs.digest }}
        run: cosign sign --yes "$IMAGE"
