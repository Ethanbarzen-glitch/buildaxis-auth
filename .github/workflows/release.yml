name: release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    name: publish (${{ matrix.name }}, ${{ matrix.dockerfile }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: api,      dockerfile: Dockerfile,                   suffix: -api }
          - { name: projects, dockerfile: services/projects/Dockerfile, suffix: -projects }
          - { name: teams,    dockerfile: services/teams/Dockerfile,    suffix: -teams }

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Vars (tag/owner)
        id: vars
        shell: bash
        run: |
          echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
          echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_OUTPUT"

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ steps.vars.outputs.owner_lc }}/buildaxis-auth${{ matrix.suffix }}:${{ steps.vars.outputs.tag }}
            ghcr.io/${{ steps.vars.outputs.owner_lc }}/buildaxis-auth${{ matrix.suffix }}:latest
          provenance: false
          sbom: false

      - name: Summarize pushed image
        if: always()
        run: |
          {
            echo "### ${{ matrix.name }}"
            echo '```'
            echo "Image: ghcr.io/${{ steps.vars.outputs.owner_lc }}/buildaxis-auth${{ matrix.suffix }}:${{ steps.vars.outputs.tag }}"
            echo "Digest: ${{ steps.build.outputs.digest }}"
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"

  github-release:
    name: GitHub Release
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Vars
        id: v
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.v.outputs.tag }}
          generate_release_notes: true
